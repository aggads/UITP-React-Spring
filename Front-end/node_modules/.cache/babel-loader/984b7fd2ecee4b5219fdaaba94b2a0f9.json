{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggad.samy\\\\Workspace\\\\UITP-React-Spring\\\\Front-end\\\\src\\\\components\\\\FormPage\\\\Mainform\\\\Motivation\\\\Motivation.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport _ from 'lodash';\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport URLStorage from '../../../../constants';\nexport default class DropdownMotivation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.onClick = a => {\n      if (!this.props.selectedCategory.motivation) {\n        this.props.selectedCategory.motivation = \"undefined\";\n      }\n\n      const questionId = this.props.listNameFromParent;\n      localStorage.setItem(\"motivations\", a.target.value);\n      var motivationStorage = localStorage.getItem(\"motivations\");\n      questionId.motivation = motivationStorage;\n      this.props.passValueToMainForm(questionId);\n      console.log(this.props.selectedCategory.motivation);\n    };\n\n    this.state = {\n      motivations: [],\n      selected: \"\" //this.onClick = this.onClick.bind(this)\n\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(URLStorage.API_URL, \"/getallmotivations\")).then(res => {\n      this.setState({\n        motivations: res.data\n      });\n    });\n    var selected = localStorage.getItem(\"selected\");\n    this.setState({\n      selected: selected\n    });\n    var questionStorage = localStorage.getItem(\"question\");\n    var getData = JSON.parse(localStorage.getItem(\"\".concat(questionStorage)));\n    var selectedCategory = this.props.selectedCategory;\n    var selectedCategoryMotivation = this.props.selectedCategory.motivation;\n  }\n\n  componentWillMount() {\n    if (!this.props.selectedCategory) {\n      this.props.selectedCategory = getData;\n    } else if (!this.props.selectedCategory.motivation) {\n      this.props.selectedCategory.motivation = \"Undefined\";\n    }\n\n    console.log(\"get data \", getData.motivation);\n    console.log(\"list name from parent \", this.props.listNameFromParent);\n    console.log(\"this.props.selectedCategory \", this.props.selectedCategory);\n    console.log(\"this.props.selectedCategory.motivation \", this.props.selectedCategory.motivation);\n  }\n\n  handleOptionSelect(e) {\n    this.setState({\n      selected: e.target.value\n    });\n    localStorage.setItem(\"selected\", e.target.value);\n  }\n\n  render() {\n    // console.log(\"hello\")\n    // console.log(this.props.selectedCategory.motivation)\n    // if(typeof(this.props.selectedCategory.motivation) === undefined){\n    //   console.log(\"Motivation null\")\n    // }\n    // var result = JSON.parse(localStorage.getItem(\"bigItem\"))\n    // console.log(result)\n    // for (var i = 0;i < result.length; i++){\n    //   if(!result[i].hasOwnProperty(\"motivation\")){\n    //       result[i].motivation = \"undefined\"\n    //   }    \n    // }\n    // if(!this.props.listNameFromParent.hasOwnProperty(\"motivation\")){\n    //   this.props.listNameFromParent.motivation = \"undefined\"\n    // }\n    return React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Motivation\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"motivations\",\n      onClick: this.onClick.bind(this),\n      onChange: this.onClick.bind(this),\n      value: this.props.selectedCategory.motivation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.motivations.map((motivations, idx) => React.createElement(\"option\", {\n      key: idx //value={questionId.motivation}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, motivations.motivation))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\aggad.samy\\Workspace\\UITP-React-Spring\\Front-end\\src\\components\\FormPage\\Mainform\\Motivation\\Motivation.js"],"names":["axios","React","_","FormGroup","Label","Input","URLStorage","DropdownMotivation","Component","constructor","props","handleChange","e","value","setState","onClick","a","selectedCategory","motivation","questionId","listNameFromParent","localStorage","setItem","target","motivationStorage","getItem","passValueToMainForm","console","log","state","motivations","selected","componentDidMount","get","API_URL","then","res","data","questionStorage","getData","JSON","parse","selectedCategoryMotivation","componentWillMount","handleOptionSelect","render","bind","map","idx"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport _ from 'lodash'\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport URLStorage from '../../../../constants';\n\nexport default class DropdownMotivation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      motivations: [],\n      selected: \"\",\n    }\n    //this.onClick = this.onClick.bind(this)\n  }\n\n  componentDidMount() {\n    axios.get(`${URLStorage.API_URL}/getallmotivations`)\n      .then(res => {\n        this.setState({ motivations: res.data });\n      })\n    var selected = localStorage.getItem(\"selected\");\n    this.setState({ selected : selected });\n\n\n\n\n    var questionStorage = localStorage.getItem(\"question\");\n    var getData = JSON.parse(localStorage.getItem(`${questionStorage}`))\n    var selectedCategory = this.props.selectedCategory\n    var selectedCategoryMotivation = this.props.selectedCategory.motivation\n\n\n    \n  }\n\n  componentWillMount(){\n    if(!this.props.selectedCategory){\n      this.props.selectedCategory = getData\n    }else if(!this.props.selectedCategory.motivation){\n      this.props.selectedCategory.motivation = \"Undefined\"\n    }\n\n    console.log(\"get data \", getData.motivation)\n    console.log(\"list name from parent \", this.props.listNameFromParent)\n    console.log(\"this.props.selectedCategory \", this.props.selectedCategory)\n    console.log(\"this.props.selectedCategory.motivation \", this.props.selectedCategory.motivation)\n  }\n\n  handleOptionSelect(e){\n    this.setState({ selected : e.target.value });\n    localStorage.setItem(\"selected\", e.target.value);\n  }\n\n  handleChange = (e, { value }) => this.setState({ value })\n\n  onClick = (a) =>{\n    if(!this.props.selectedCategory.motivation){\n      this.props.selectedCategory.motivation = \"undefined\"\n    }\n    const questionId = this.props.listNameFromParent\n    localStorage.setItem(\"motivations\", a.target.value)\n    var motivationStorage = localStorage.getItem(\"motivations\")\n    questionId.motivation = motivationStorage\n    this.props.passValueToMainForm(questionId)\n    \n    console.log(this.props.selectedCategory.motivation)\n  }\n\n  render() {\n\n    // console.log(\"hello\")\n    // console.log(this.props.selectedCategory.motivation)\n    // if(typeof(this.props.selectedCategory.motivation) === undefined){\n    //   console.log(\"Motivation null\")\n\n    // }\n    // var result = JSON.parse(localStorage.getItem(\"bigItem\"))\n    // console.log(result)\n    // for (var i = 0;i < result.length; i++){\n    //   if(!result[i].hasOwnProperty(\"motivation\")){\n    //       result[i].motivation = \"undefined\"\n    //   }    \n    // }\n    // if(!this.props.listNameFromParent.hasOwnProperty(\"motivation\")){\n    //   this.props.listNameFromParent.motivation = \"undefined\"\n    // }\n    \n\n    return <FormGroup>\n      <Label for=\"exampleSelect\">Motivation</Label>\n      <Input type=\"select\" name=\"motivations\"\n      onClick ={this.onClick.bind(this)}\n        onChange={this.onClick.bind(this)} \n        value={this.props.selectedCategory.motivation}\n        \n      >\n        {this.state.motivations.map((motivations, idx) =>\n          <option\n            key={idx}\n            //value={questionId.motivation}\n          >\n            {motivations.motivation}\n          </option>)\n        }\n      </Input>\n    </FormGroup>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}