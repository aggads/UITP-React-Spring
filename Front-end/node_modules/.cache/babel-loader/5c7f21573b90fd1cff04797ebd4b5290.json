{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggad.samy\\\\Workspace\\\\uitp-service\\\\Front-end\\\\src\\\\components\\\\FormPage\\\\Mainform\\\\Comment\\\\Comment.js\";\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport React, { PureComponent } from 'react';\n\nclass Comments extends PureComponent {\n  render() {\n    return React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(Input, {\n      style: {\n        margin: '0',\n        width: \"100%\"\n      },\n      type: \"textarea\",\n      id: \"exampleText\",\n      onChange: this.props.parentCallback,\n      value: this.props.comment,\n      name: \"comment\",\n      placeholder: \"Place comment if needed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }));\n  }\n\n} // const Comments = React.memo((props) => {\n//     return <Col>\n//         <FormGroup>\n//             <Label for=\"exampleText\">Comment</Label>\n//             <Input style={{ margin: '0' }} type=\"textarea\" id=\"exampleText\" onChange={props.parentCallback} value={props.comment} name=\"comment\" placeholder=\"Place comment if needed\" />\n//         </FormGroup>\n//     </Col>\n// });\n\n\nexport default Comments;","map":{"version":3,"sources":["C:\\Users\\aggad.samy\\Workspace\\uitp-service\\Front-end\\src\\components\\FormPage\\Mainform\\Comment\\Comment.js"],"names":["FormGroup","Label","Input","React","PureComponent","Comments","render","margin","width","props","parentCallback","comment"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,MAAMC,QAAN,SAAuBD,aAAvB,CAAqC;AAEnCE,EAAAA,MAAM,GAAG;AACI,WAAmB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAClB,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADkB,EAElB,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAAd;AAAgD,MAAA,IAAI,EAAC,UAArD;AAAgE,MAAA,EAAE,EAAC,aAAnE;AAAiF,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,cAAtG;AAAsH,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,OAAxI;AAAiJ,MAAA,IAAI,EAAC,SAAtJ;AAAgK,MAAA,WAAW,EAAC,yBAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFkB,CAAnB;AAKV;;AARgC,C,CAWrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeN,QAAf","sourcesContent":["import { FormGroup, Label, Input } from 'reactstrap';\nimport React, { PureComponent } from 'react'\n\nclass Comments extends PureComponent {\n\n  render() {\n               return             <FormGroup>\n                <Label for=\"exampleText\">Comment</Label>\n                <Input style={{ margin: '0', width: \"100%\",  }} type=\"textarea\" id=\"exampleText\" onChange={this.props.parentCallback} value={this.props.comment} name=\"comment\" placeholder=\"Place comment if needed\" />\n            </FormGroup>\n        \n    };\n}\n\n// const Comments = React.memo((props) => {\n//     return <Col>\n//         <FormGroup>\n//             <Label for=\"exampleText\">Comment</Label>\n//             <Input style={{ margin: '0' }} type=\"textarea\" id=\"exampleText\" onChange={props.parentCallback} value={props.comment} name=\"comment\" placeholder=\"Place comment if needed\" />\n//         </FormGroup>\n//     </Col>\n// });\n\nexport default Comments;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}