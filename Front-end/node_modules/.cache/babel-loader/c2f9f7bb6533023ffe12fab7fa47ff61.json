{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggad.samy\\\\Workspace\\\\UITP-React-Spring\\\\Front-end\\\\src\\\\components\\\\FormPage\\\\FormPage.js\";\nimport Mode from '../ModeSelection/Mode';\nimport MainForm from './Mainform/MainForm';\nimport Legend from './Mainform/Legend/Legend';\nimport React from 'react';\nimport { Container } from 'reactstrap';\nexport default class FormPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedCat: 1,\n      selectedMode: 0,\n      group: null,\n      stateMode: []\n    };\n\n    this.handleSelection = idx => e => {\n      this.setState({\n        selectedMode: idx\n      });\n    };\n\n    this.selectCat = e => {\n      this.setState({\n        selectedCat: e.target.value\n      });\n    };\n  }\n\n  // async retrieveData(){\n  //     try {\n  //         await var stateMode = JSON.parse(localStorage.getItem(\"stateMode\"))\n  //     } catch (error) {\n  //     }\n  //     return stateMode\n  // }\n  componentWillMount() {\n    let getGroup = localStorage.getItem(\"group\"); // const asyncLocalStorage = {\n    //     setItem: async function (key, value) {\n    //         await null;\n    //         return localStorage.setItem(key, value);\n    //     },\n    //     getItem: async function (key) {\n    //         await null;\n    //         return localStorage.getItem(key);\n    //     }\n    // };\n    // var stateMode = asyncLocalStorage.getItem(\"stateMode\")\n    // console.log(stateMode)\n    // stateMode.then(function(value) {\n    //     console.log(\"async storage \", value)\n    // })\n\n    this.setState({\n      group: getGroup // stateMode: stateMode.modes\n\n    });\n  }\n\n  componentDidMount() {\n    localStorage.setItem(\"stateMode\", JSON.stringify(this.props.location.state));\n    var stateModeN = localStorage.getItem(\"stateMode\");\n    console.log(\"Normal storage \", stateModeN); // console.log(\"state mode \", stateMode)\n    // console.log(\"THE STATE \", this.state)\n  }\n\n  render() {\n    //const selectedtransport = this.props.location.state.modes.modes.filter(item => item.selected === true);\n    console.log(\"group \", this.state.stateMode.modes);\n    console.log(\"group state \", this.props.location);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\aggad.samy\\Workspace\\UITP-React-Spring\\Front-end\\src\\components\\FormPage\\FormPage.js"],"names":["Mode","MainForm","Legend","React","Container","FormPage","Component","state","selectedCat","selectedMode","group","stateMode","handleSelection","idx","e","setState","selectCat","target","value","componentWillMount","getGroup","localStorage","getItem","componentDidMount","setItem","JSON","stringify","props","location","stateModeN","console","log","render","modes"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAIA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAClDC,KADkD,GAC1C;AACJC,MAAAA,WAAW,EAAE,CADT;AAEJC,MAAAA,YAAY,EAAE,CAFV;AAGJC,MAAAA,KAAK,EAAE,IAHH;AAIJC,MAAAA,SAAS,EAAE;AAJP,KAD0C;;AAAA,SAQlDC,eARkD,GAQ/BC,GAAD,IAAUC,CAAD,IAAO;AAC9B,WAAKC,QAAL,CAAc;AAAEN,QAAAA,YAAY,EAAEI;AAAhB,OAAd;AACH,KAViD;;AAAA,SAYlDG,SAZkD,GAYrCF,CAAD,IAAO;AACf,WAAKC,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEM,CAAC,CAACG,MAAF,CAASC;AAAxB,OAAd;AACH,KAdiD;AAAA;;AAiBlD;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEAC,EAAAA,kBAAkB,GAAE;AAChB,QAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf,CADgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,SAAKP,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAEU,QADG,CAEV;;AAFU,KAAd;AAIH;;AACDG,EAAAA,iBAAiB,GAAE;AAEfF,IAAAA,YAAY,CAACG,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWC,QAAX,CAAoBrB,KAAnC,CAAlC;AACA,QAAIsB,UAAU,GAAGR,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAjB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,UAA/B,EAJe,CAMf;AACA;AACH;;AAELG,EAAAA,MAAM,GAAG;AACD;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKxB,KAAL,CAAWI,SAAX,CAAqBsB,KAA3C;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKJ,KAAL,CAAWC,QAAvC;AACA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AA8BH;;AAhGiD","sourcesContent":["import Mode from '../ModeSelection/Mode'\nimport MainForm from './Mainform/MainForm'\nimport Legend from './Mainform/Legend/Legend'\nimport React from 'react';\nimport { Container } from 'reactstrap';\n\n\n\nexport default class FormPage extends React.Component {\n    state = {\n        selectedCat: 1,\n        selectedMode: 0,\n        group: null, \n        stateMode: [],\n    };\n\n    handleSelection = (idx) => (e) => {\n        this.setState({ selectedMode: idx });\n    };\n\n    selectCat = (e) => {\n        this.setState({ selectedCat: e.target.value })\n    }\n\n    \n    // async retrieveData(){\n    //     try {\n             \n    //         await var stateMode = JSON.parse(localStorage.getItem(\"stateMode\"))\n    //     } catch (error) {\n            \n    //     }\n        \n    //     return stateMode\n    // }\n\n    componentWillMount(){\n        let getGroup = localStorage.getItem(\"group\")\n        \n        // const asyncLocalStorage = {\n        //     setItem: async function (key, value) {\n        //         await null;\n        //         return localStorage.setItem(key, value);\n        //     },\n        //     getItem: async function (key) {\n        //         await null;\n        //         return localStorage.getItem(key);\n        //     }\n        // };\n        // var stateMode = asyncLocalStorage.getItem(\"stateMode\")\n        \n        // console.log(stateMode)\n        // stateMode.then(function(value) {\n        //     console.log(\"async storage \", value)\n        // })\n        this.setState({\n            group: getGroup,\n            // stateMode: stateMode.modes\n        })\n    }\n    componentDidMount(){\n        \n        localStorage.setItem(\"stateMode\", JSON.stringify(this.props.location.state)) \n        var stateModeN = localStorage.getItem(\"stateMode\")  \n        console.log(\"Normal storage \", stateModeN)\n        \n        // console.log(\"state mode \", stateMode)\n        // console.log(\"THE STATE \", this.state)\n    }\n\nrender() {\n        //const selectedtransport = this.props.location.state.modes.modes.filter(item => item.selected === true);\n        console.log(\"group \", this.state.stateMode.modes)\n        console.log(\"group state \", this.props.location)\n        return (\n            <React.Fragment>\n                <Container>\n                    <Legend /> \n\n                    {/* <div style={{ display: \"block\", margin: \"auto\" }}>\n                        <h4>{this.state.group === 0 ? \"Separate\" : \"Grouped\"} Reporting for</h4>\n\n                        <div style={{ display: \"flex\", justifyContent: \"start\", marginBottom: \"40px\" }}>\n                            {this.state.group === 0 ?\n                            \n                            this.state.stateMode.modes.filter(mode => mode.selected === true).map((mode, idx) =>\n                            <Mode key={idx} id={mode.id} index={idx} name={mode.name} url={mode} selected={this.state.selectedMode === idx ? true : false} maxHeight=\"50px\" handleSelection={this.handleSelection(idx)} grouped={false} />)\n                            :                             \n                             this.state.stateMode.modes.filter(mode => mode.selected === true).map((mode, idx) =>\n                             <Mode key={idx} id={mode.id} index={idx} name={mode.name} url={mode} selected={true} maxHeight=\"50px\" grouped={true}  />) }  \n                        </div>\n\n                        \n                    </div>\n\n\n                    {this.state.stateMode.modes.filter(mode => mode.selected === true).map((mode, idx) => idx === this.state.selectedMode &&\n                        <MainForm key={idx} id={mode.id} group={this.state.group} index={idx} />\n                    )} */}\n\n\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}