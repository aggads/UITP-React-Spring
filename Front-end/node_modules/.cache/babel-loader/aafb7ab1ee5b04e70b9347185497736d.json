{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggad.samy\\\\Workspace\\\\UITP-React-Spring\\\\Front-end\\\\src\\\\components\\\\FormPage\\\\Mainform\\\\Comment\\\\Comment.js\";\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport React, { PureComponent } from 'react';\n\nclass Comments extends PureComponent {\n  // state = {\n  //   comment: \"\",\n  // }\n  // async handleChange(event) {\n  //   var val = event.target.value\n  //   await this.setState({\n  //     comment: event.target.value\n  //   })\n  // }\n  // onblur(event) {\n  //   const questionId = this.props.listNameFromParent\n  //   localStorage.setItem(\"comments\", this.state.comment)\n  //   var commentStorage = localStorage.getItem(\"comments\")\n  //   questionId.comment = commentStorage\n  // }\n  render() {\n    const questionId = this.props.listNameFromParent;\n    this.props.passValueToMainForm(questionId);\n    return React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(Input, {\n      style: {\n        margin: '0',\n        width: \"100%\"\n      },\n      type: \"textarea\",\n      id: \"exampleText\" // onBlur={(event) => this.onblur(event)}\n      ,\n      onBlur: this.props.onBlur,\n      onChange: this.props.handleChange,\n      value: this.props.selectedCategory.comment,\n      name: \"comment\",\n      placeholder: \"First place comment if needed\" // onChange={this.handleChange.bind(this)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:\\Users\\aggad.samy\\Workspace\\UITP-React-Spring\\Front-end\\src\\components\\FormPage\\Mainform\\Comment\\Comment.js"],"names":["FormGroup","Label","Input","React","PureComponent","Comments","render","questionId","props","listNameFromParent","passValueToMainForm","margin","width","onBlur","handleChange","selectedCategory","comment"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,MAAMC,QAAN,SAAuBD,aAAvB,CAAqC;AAEnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,kBAA9B;AACA,SAAKD,KAAL,CAAWE,mBAAX,CAA+BH,UAA/B;AACA,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADK,EAEL,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OADT;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,aAHL,CAIE;AAJF;AAKE,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,MALrB;AAME,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,YANvB;AAOE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,gBAAX,CAA4BC,OAPrC;AAQE,MAAA,IAAI,EAAC,SARP;AASE,MAAA,WAAW,EAAC,+BATd,CAUE;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,CAAP;AAgBD;;AAtCkC;;AAyCrC,eAAeX,QAAf","sourcesContent":["import { FormGroup, Label, Input } from 'reactstrap';\nimport React, { PureComponent } from 'react'\n\nclass Comments extends PureComponent {\n\n  // state = {\n  //   comment: \"\",\n  // }\n\n  // async handleChange(event) {\n  //   var val = event.target.value\n  //   await this.setState({\n  //     comment: event.target.value\n  //   })\n  // }\n  // onblur(event) {\n  //   const questionId = this.props.listNameFromParent\n  //   localStorage.setItem(\"comments\", this.state.comment)\n  //   var commentStorage = localStorage.getItem(\"comments\")\n  //   questionId.comment = commentStorage\n  // }\n\n  render() {\n    const questionId = this.props.listNameFromParent\n    this.props.passValueToMainForm(questionId)\n    return <FormGroup>\n      <Label for=\"exampleText\">Comment</Label>\n      <Input\n        style={{ margin: '0', width: \"100%\", }}\n        type=\"textarea\"\n        id=\"exampleText\"\n        // onBlur={(event) => this.onblur(event)}\n        onBlur={this.props.onBlur}\n        onChange={this.props.handleChange}\n        value={this.props.selectedCategory.comment}\n        name=\"comment\"\n        placeholder=\"First place comment if needed\"\n        // onChange={this.handleChange.bind(this)}\n      />\n    </FormGroup>\n\n  };\n}\n\nexport default Comments;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}