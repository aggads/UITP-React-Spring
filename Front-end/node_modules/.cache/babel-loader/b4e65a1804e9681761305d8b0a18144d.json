{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggad.samy\\\\Workspace\\\\UITP-React-Spring\\\\Front-end\\\\src\\\\components\\\\FormPage\\\\Mainform\\\\Motivation\\\\Motivation.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport _ from 'lodash';\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport URLStorage from '../../../../constants';\nimport MainForm from '../MainForm';\nimport { Dropdown, Grid, Segment } from 'semantic-ui-react';\nimport uniqueid from 'uniqid';\nexport default class DropdownMotivation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.onClick = a => {\n      const questionId = this.props.listNameFromParent;\n      localStorage.setItem(\"motivations\", a.target.value);\n      var motivationStorage = localStorage.getItem(\"motivations\");\n      questionId.motivation = motivationStorage;\n      this.props.passValueToMainForm(questionId);\n      console.log(\"this state selected \", questionId);\n    };\n\n    this.state = {\n      motivations: [],\n      selected: \"\"\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(URLStorage.API_URL, \"/getallmotivations\")).then(res => {\n      this.setState({\n        motivations: res.data\n      }); //localStorage.setItem(\"motivation\", JSON.stringify(res.data));\n    });\n    var selected = localStorage.getItem(\"selected\");\n    this.setState({\n      selected: selected\n    });\n  }\n\n  handleOptionSelect(e) {\n    this.setState({\n      selected: e.target.value\n    });\n    localStorage.setItem(\"selected\", e.target.value);\n  }\n\n  render() {\n    //const questionId = this.props.listNameFromParent\n    var selected = this.state.selected;\n    return React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Motivation\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"motivations\",\n      onClick: this.onClick.bind(this) // onClick={(a) => {\n      //   localStorage.setItem(\"motivations\", a.target.value)\n      //   var motivationStorage = localStorage.getItem(\"motivations\")\n      //   questionId.motivation = motivationStorage\n      //   this.props.passValueToMainForm(questionId)\n      //   console.log(\"this state selected \", questionId)\n      // }\n      // }\n      ,\n      onChange: this.handleOptionSelect.bind(this),\n      value: selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.motivations.map((motivations, idx) => React.createElement(\"option\", {\n      key: idx //value={questionId.motivation}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, motivations.motivation))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\aggad.samy\\Workspace\\UITP-React-Spring\\Front-end\\src\\components\\FormPage\\Mainform\\Motivation\\Motivation.js"],"names":["axios","React","_","FormGroup","Label","Input","URLStorage","MainForm","Dropdown","Grid","Segment","uniqueid","DropdownMotivation","Component","constructor","props","handleChange","e","value","setState","onClick","a","questionId","listNameFromParent","localStorage","setItem","target","motivationStorage","getItem","motivation","passValueToMainForm","console","log","state","motivations","selected","bind","componentDidMount","get","API_URL","then","res","data","handleOptionSelect","render","map","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,OAAzB,QAAwC,mBAAxC;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,MAAMC,kBAAN,SAAiCX,KAAK,CAACY,SAAvC,CAAiD;AAC9DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BnBC,YA3BmB,GA2BJ,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAkB,KAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,CA3Bd;;AAAA,SA6BnBE,OA7BmB,GA6BRC,CAAD,IAAM;AACd,YAAMC,UAAU,GAAG,KAAKP,KAAL,CAAWQ,kBAA9B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCJ,CAAC,CAACK,MAAF,CAASR,KAA7C;AACE,UAAIS,iBAAiB,GAAGH,YAAY,CAACI,OAAb,CAAqB,aAArB,CAAxB;AACAN,MAAAA,UAAU,CAACO,UAAX,GAAwBF,iBAAxB;AACA,WAAKZ,KAAL,CAAWe,mBAAX,CAA+BR,UAA/B;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCV,UAApC;AACH,KApCkB;;AAEjB,SAAKW,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIA,SAAKf,OAAL,GAAe,KAAKA,OAAL,CAAagB,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAKDC,EAAAA,iBAAiB,GAAG;AAClBrC,IAAAA,KAAK,CAACsC,GAAN,WAAahC,UAAU,CAACiC,OAAxB,yBACGC,IADH,CACQC,GAAG,IAAI;AACX,WAAKtB,QAAL,CAAc;AAAEe,QAAAA,WAAW,EAAEO,GAAG,CAACC;AAAnB,OAAd,EADW,CAEX;AACD,KAJH;AAKA,QAAIP,QAAQ,GAAGX,YAAY,CAACI,OAAb,CAAqB,UAArB,CAAf;AACA,SAAKT,QAAL,CAAc;AAAEgB,MAAAA,QAAQ,EAAGA;AAAb,KAAd;AACD;;AACDQ,EAAAA,kBAAkB,CAAC1B,CAAD,EAAG;AACnB,SAAKE,QAAL,CAAc;AAAEgB,MAAAA,QAAQ,EAAGlB,CAAC,CAACS,MAAF,CAASR;AAAtB,KAAd;AACAM,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCR,CAAC,CAACS,MAAF,CAASR,KAA1C;AACD;;AAeD0B,EAAAA,MAAM,GAAG;AAEP;AACA,QAAIT,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;AACA,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADK,EAEL,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,aAA1B;AACA,MAAA,OAAO,EAAG,KAAKf,OAAL,CAAagB,IAAb,CAAkB,IAAlB,CADV,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATF;AAUE,MAAA,QAAQ,EAAE,KAAKO,kBAAL,CAAwBP,IAAxB,CAA6B,IAA7B,CAVZ;AAWE,MAAA,KAAK,EAAED,QAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaG,KAAKF,KAAL,CAAWC,WAAX,CAAuBW,GAAvB,CAA2B,CAACX,WAAD,EAAcY,GAAd,KAC1B;AACE,MAAA,GAAG,EAAEA,GADP,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGZ,WAAW,CAACL,UAJf,CADD,CAbH,CAFK,CAAP;AAyBD;;AArE6D","sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport _ from 'lodash'\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport URLStorage from '../../../../constants';\nimport MainForm from '../MainForm'\nimport { Dropdown, Grid, Segment } from 'semantic-ui-react'\nimport uniqueid from 'uniqid';\n\nexport default class DropdownMotivation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      motivations: [],\n      selected: \"\",\n    }\n    this.onClick = this.onClick.bind(this)\n  }\n\n\n\n\n  componentDidMount() {\n    axios.get(`${URLStorage.API_URL}/getallmotivations`)\n      .then(res => {\n        this.setState({ motivations: res.data });\n        //localStorage.setItem(\"motivation\", JSON.stringify(res.data));\n      })\n    var selected = localStorage.getItem(\"selected\");\n    this.setState({ selected : selected });\n  }\n  handleOptionSelect(e){\n    this.setState({ selected : e.target.value });\n    localStorage.setItem(\"selected\", e.target.value);\n  }\n\n\n  handleChange = (e, { value }) => this.setState({ value })\n\n  onClick = (a) =>{\n    const questionId = this.props.listNameFromParent\n    localStorage.setItem(\"motivations\", a.target.value)\n      var motivationStorage = localStorage.getItem(\"motivations\")\n      questionId.motivation = motivationStorage\n      this.props.passValueToMainForm(questionId)\n      console.log(\"this state selected \", questionId)\n  }\n\n\n  render() {\n\n    //const questionId = this.props.listNameFromParent\n    var selected = this.state.selected\n    return <FormGroup>\n      <Label for=\"exampleSelect\">Motivation</Label>\n      <Input type=\"select\" name=\"motivations\"\n      onClick ={this.onClick.bind(this)}\n        // onClick={(a) => {\n        //   localStorage.setItem(\"motivations\", a.target.value)\n        //   var motivationStorage = localStorage.getItem(\"motivations\")\n        //   questionId.motivation = motivationStorage\n        //   this.props.passValueToMainForm(questionId)\n        //   console.log(\"this state selected \", questionId)\n        // }\n        // }\n        onChange={this.handleOptionSelect.bind(this)} \n        value={selected}\n      >\n        {this.state.motivations.map((motivations, idx) =>\n          <option\n            key={idx}\n            //value={questionId.motivation}\n          >\n            {motivations.motivation}\n          </option>)\n        }\n      </Input>\n    </FormGroup>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}