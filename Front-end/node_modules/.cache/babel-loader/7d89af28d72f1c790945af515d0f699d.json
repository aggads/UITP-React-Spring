{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggad.samy\\\\Workspace\\\\uitp-service\\\\Front-end\\\\src\\\\components\\\\FormPage\\\\Mainform\\\\Frequency\\\\Radio.js\";\nimport { ButtonGroup, Button } from 'reactstrap';\nimport axios from 'axios';\nimport URLStorage from '../../../../constants';\nimport uniqueid from 'uniqid';\nimport './Radio.css';\nimport React, { PureComponent } from 'react';\n\nclass Frequency extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      regularity: [],\n      regularityId: 0,\n      active: null,\n      id: 0 // compare() {\n      //     if (!this.props.prevFreq) return <Alert>No result previous year</Alert>\n      //     if (this.props.value > this.props.prevFreq) return <Alert><img src=\"./RadioIcons/up.svg\"  alt=\"UP\"/></Alert>\n      //     else if (this.props.value < this.props.prevFreq) return <Alert><img src=\"./RadioIcons/down.svg\"  alt=\"DOWN\"/></Alert>\n      //     else if (this.props.value === this.props.prevFreq) return <Alert><img src=\"./RadioIcons/stable.svg\" alt=\"Stable\"/></Alert>\n      //     else if (this.props.value === null) return <Alert>_</Alert>\n      // }\n      // onclick(e){\n      //     className={this.state.regularity[index] === this.props.idFrequency ? \"active\" : \"inactive\"}\n      // }\n\n    };\n\n    this.funFunc = () => {\n      const regularityCall = this.state.regularityId.regularityCall;\n      this.props.callBackFromParent(regularityCall);\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(URLStorage.API_URL, \"/getallfrequency\")).then(res => {\n      const data = res.data;\n      this.setState({\n        regularity: data,\n        isLoaded: true\n      });\n    }); // localStorage.getItem(\"regularityId\")\n  }\n\n  // componentDidUpdate(){\n  //     localStorage.setItem(\"regularityId\",   \n  //     JSON.stringify(this.state.regularityId))\n  // }\n  render() {\n    const questionId = this.props.listNameFromParent + 1;\n    console.log(questionId);\n    return React.createElement(React.Fragment, null, React.createElement(ButtonGroup, {\n      className: \"squareRadio\",\n      name: \"frequency\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.regularity.map((frequency, index) => {\n      return React.createElement(Button, {\n        className: this.state.active === index ? \"active\" : null,\n        onClick: a => {\n          this.setState({\n            active: index,\n            regularityId: index\n          });\n          this.funFunc();\n          localStorage.setItem(\"frequency\" + questionId, a.target.value); //console.log(this.props.listNameFromParent)\n        },\n        name: \"frequency\",\n        key: index,\n        value: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, frequency.regularity);\n    })));\n  }\n\n}\n\nexport default Frequency;","map":{"version":3,"sources":["C:\\Users\\aggad.samy\\Workspace\\uitp-service\\Front-end\\src\\components\\FormPage\\Mainform\\Frequency\\Radio.js"],"names":["ButtonGroup","Button","axios","URLStorage","uniqueid","React","PureComponent","Frequency","state","regularity","regularityId","active","id","funFunc","regularityCall","props","callBackFromParent","componentDidMount","get","API_URL","then","res","data","setState","isLoaded","render","questionId","listNameFromParent","console","log","map","frequency","index","a","localStorage","setItem","target","value"],"mappings":";AACA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,YAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAO,aAAP;AAEA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,MAAMC,SAAN,SAAwBD,aAAxB,CAAsC;AAAA;AAAA;AAAA,SAElCE,KAFkC,GAE1B;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,YAAY,EAAE,CAFV;AAGJC,MAAAA,MAAM,EAAE,IAHJ;AAIJC,MAAAA,EAAE,EAAE,CAJA,CAOR;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAnBQ,KAF0B;;AAAA,SAoClCC,OApCkC,GAoCxB,MAAM;AAAA,YACJC,cADI,GACe,KAAKN,KAAL,CAAWE,YAD1B,CACJI,cADI;AAEZ,WAAKC,KAAL,CAAWC,kBAAX,CAA8BF,cAA9B;AACH,KAvCiC;AAAA;;AAuBlCG,EAAAA,iBAAiB,GAAG;AAChBf,IAAAA,KAAK,CAACgB,GAAN,WAAaf,UAAU,CAACgB,OAAxB,uBACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACA,WAAKC,QAAL,CAAc;AACVd,QAAAA,UAAU,EAAEa,IADF;AAEVE,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH,KAPL,EADgB,CAShB;AAEH;;AAQD;AACA;AACA;AACA;AAKAC,EAAAA,MAAM,GAAG;AAEL,UAAMC,UAAU,GAAG,KAAKX,KAAL,CAAWY,kBAAX,GAA+B,CAAlD;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA,WAGI,0CACI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAqC,MAAA,IAAI,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,KAAL,CAAWC,UAAX,CAAsBqB,GAAtB,CAA0B,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC7C,aACI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWG,MAAX,KAAsBqB,KAAtB,cAAyC,IADxD;AAEI,QAAA,OAAO,EAAGC,CAAD,IAAO;AACR,eAAKV,QAAL,CAAc;AAAEZ,YAAAA,MAAM,EAAEqB,KAAV;AAAiBtB,YAAAA,YAAY,EAAEsB;AAA/B,WAAd;AACA,eAAKnB,OAAL;AACAqB,UAAAA,YAAY,CAACC,OAAb,CAAqB,cAAcT,UAAnC,EAA+CO,CAAC,CAACG,MAAF,CAASC,KAAxD,EAHQ,CAIR;AACH,SAPT;AASI,QAAA,IAAI,EAAC,WATT;AAUI,QAAA,GAAG,EAAEL,KAVT;AAWI,QAAA,KAAK,EAAEA,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcKD,SAAS,CAACtB,UAdf,CADJ;AAkBH,KAnBA,CADL,CADJ,CAHJ;AA4BH;;AApFiC;;AAuFtC,eAAeF,SAAf","sourcesContent":["\nimport { ButtonGroup, Button } from 'reactstrap';\nimport axios from 'axios';\nimport URLStorage from '../../../../constants';\nimport uniqueid from 'uniqid';\nimport './Radio.css';\n\nimport React, { PureComponent } from 'react'\n\nclass Frequency extends PureComponent {\n\n    state = {\n        regularity: [],\n        regularityId: 0,\n        active: null,\n        id: 0,\n    }\n\n    // compare() {\n\n    //     if (!this.props.prevFreq) return <Alert>No result previous year</Alert>\n    //     if (this.props.value > this.props.prevFreq) return <Alert><img src=\"./RadioIcons/up.svg\"  alt=\"UP\"/></Alert>\n    //     else if (this.props.value < this.props.prevFreq) return <Alert><img src=\"./RadioIcons/down.svg\"  alt=\"DOWN\"/></Alert>\n    //     else if (this.props.value === this.props.prevFreq) return <Alert><img src=\"./RadioIcons/stable.svg\" alt=\"Stable\"/></Alert>\n    //     else if (this.props.value === null) return <Alert>_</Alert>\n    // }\n\n    // onclick(e){\n    //     className={this.state.regularity[index] === this.props.idFrequency ? \"active\" : \"inactive\"}\n\n    // }\n\n    componentDidMount() {\n        axios.get(`${URLStorage.API_URL}/getallfrequency`)\n            .then(res => {\n                const data = res.data\n                this.setState({\n                    regularity: data,\n                    isLoaded: true,\n                })\n            })\n        // localStorage.getItem(\"regularityId\")\n\n    }\n\n    funFunc = () => {\n        const { regularityCall } = this.state.regularityId\n        this.props.callBackFromParent(regularityCall)\n    }\n\n\n    // componentDidUpdate(){\n    //     localStorage.setItem(\"regularityId\",   \n    //     JSON.stringify(this.state.regularityId))\n    // }\n\n\n\n\n    render() {\n\n        const questionId = this.props.listNameFromParent +1\n\n        console.log(questionId)\n\n        return (\n\n\n            <>\n                <ButtonGroup className='squareRadio' name=\"frequency\">\n                    {this.state.regularity.map((frequency, index) => {\n                        return (\n                            <Button\n                                className={this.state.active === index ? `active` : null}\n                                onClick={(a) => {\n                                        this.setState({ active: index, regularityId: index })\n                                        this.funFunc()\n                                        localStorage.setItem(\"frequency\" + questionId, a.target.value)\n                                        //console.log(this.props.listNameFromParent)\n                                    }\n                                }\n                                name=\"frequency\"\n                                key={index}\n                                value={index}\n\n                            >\n                                {frequency.regularity}\n                            </Button>\n                        );\n                    })}\n                </ButtonGroup>\n            </>\n        )\n    }\n}\n\nexport default Frequency; "]},"metadata":{},"sourceType":"module"}