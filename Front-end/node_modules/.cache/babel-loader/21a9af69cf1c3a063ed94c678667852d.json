{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggad.samy\\\\Workspace\\\\UITP-React-Spring\\\\Front-end\\\\src\\\\components\\\\FormPage\\\\Mainform\\\\Motivation\\\\ErrorBoundary.js\";\nimport React, { logErrorToMyService } from 'react';\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({\n      hasError: true\n    }); // You can also log the error to an error reporting service\n\n    logErrorToMyService(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Something went wrong.\");\n    }\n\n    return this.props.children;\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\aggad.samy\\Workspace\\UITP-React-Spring\\Front-end\\src\\components\\FormPage\\Mainform\\Motivation\\ErrorBoundary.js"],"names":["React","logErrorToMyService","ErrorBoundary","Component","constructor","props","state","hasError","componentDidCatch","error","info","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,mBAAf,QAAyC,OAAzC;AAEA,eAAe,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC7B;AACA,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAd,EAF6B,CAG7B;;AACAN,IAAAA,mBAAmB,CAACQ,KAAD,EAAQC,IAAR,CAAnB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKN,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AACD,WAAO,KAAKF,KAAL,CAAWQ,QAAlB;AACD;;AAnBsD","sourcesContent":["import React, {logErrorToMyService} from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Display fallback UI\r\n      this.setState({ hasError: true });\r\n      // You can also log the error to an error reporting service\r\n      logErrorToMyService(error, info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n      return this.props.children;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}