{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggad.samy\\\\Workspace\\\\UITP-React-Spring\\\\Front-end\\\\src\\\\components\\\\FormPage\\\\Mainform\\\\MainForm.js\";\nimport Frequency from './Frequency/Radio';\nimport Comments from './Comment/Comment'; // import Legend from './Legend/Legend';\n\nimport Motivation from './Motivation/Motivation';\nimport Categories from './Categories/Categories';\nimport URLStorage from '../../../constants';\nimport { Link } from 'react-router-dom';\nimport uniqueid from 'uniqid'; // import  ConfirmModal  from '../Modal';\n\nimport '../../../App.css';\nimport axios from 'axios';\nimport React from 'react';\nimport { Container, Row, Col, Button, Form, FormGroup } from 'reactstrap';\nimport './MainForm.css';\nimport DropdownExampleCompact from './Motivation/Motivation';\nimport { ButtonGroup, Dropdown } from 'semantic-ui-react';\nimport DropdownMotivation from './Motivation/Motivation';\nexport default class MainForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelection = idx => e => {\n      this.setState({\n        selectedMode: idx\n      });\n    };\n\n    this.next = () => {\n      let id = this.state.id + 1;\n      this.fetchQuestions(id);\n      this.setState(prevState => ({\n        selectedCat: prevState.selectedCat + 1,\n        id: prevState.id + 1\n      }));\n    };\n\n    this.prev = () => {\n      let id = this.state.id - 1;\n      this.fetchQuestions(id);\n      this.setState(prevState => ({\n        selectedCat: prevState.selectedCat - 1,\n        id: prevState.id - 1\n      }));\n    };\n\n    this.fetchQuestions = id => {\n      axios.get(\"\".concat(URLStorage.API_URL, \"/getAllQuestions/\").concat(id)).then(res => {\n        const data = res.data;\n        this.setState({\n          question: data,\n          isLoaded: true\n        });\n      });\n    };\n\n    this.test = question => {\n      var test = this.state.allData;\n\n      if (test === null) {\n        return this.setState({\n          allData: []\n        });\n      } else {\n        for (let i = 0; i < test.length; i++) {\n          if (test[i].question === question) {}\n        }\n      }\n    };\n\n    this.selectCat = e => {\n      this.setState({\n        selectedCat: e.target.value\n      });\n      localStorage.setItem(this.props.id, JSON.stringify(this.state.answers));\n    };\n\n    this.frequencyCallback = regularityCall => {\n      this.setState({\n        regularityFromChild: regularityCall\n      });\n    };\n\n    this.state = {\n      question: [],\n      id: 1,\n      test: null,\n      allData: [],\n      answers: [],\n      value: [],\n      selectedCat: 1,\n      selectedMode: 0,\n      dataGet: [],\n      incidentName: \"\"\n    };\n  }\n\n  handleClick(question) {\n    if (this.state.allData.length) {\n      var getQuestion = this.state.allData.find(function (data, id) {\n        if (data.id === question.id) {\n          return data;\n        } else {\n          return false;\n        }\n      });\n\n      if (getQuestion) {\n        var indexOf = this.state.allData.indexOf(getQuestion);\n\n        for (var key in getQuestion) {\n          if (getQuestion[key] === question[key] || getQuestion[key] === undefined) {\n            getQuestion[key] = question[key];\n            this.state.allData.splice(indexOf, 1, question);\n            console.log(this.state.allData);\n            localStorage.setItem(\"bigItem \", JSON.parse(this.state.allData));\n          }\n        }\n      } else {\n        this.setState({\n          allData: [...this.state.allData, question]\n        });\n        console.log(this.state.allData);\n        localStorage.setItem(\"bigItem \", JSON.parse(this.state.allData));\n      }\n    } else {\n      this.setState({\n        allData: [question]\n      });\n      localStorage.setItem(\"bigItem \", JSON.parse(this.state.allData));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchQuestions(1);\n    const transportId = this.props.id;\n    this.setState({\n      modeID: transportId\n    });\n\n    if (this.state.allData.filter(answer => answer.frequency === null).length === 0) {\n      let completeMode = JSON.parse(localStorage.getItem(\"completedModes\"));\n      completeMode[this.props.index] = true;\n\n      if (this.props.group) {\n        var dummieArray = [];\n        completeMode.map(item => dummieArray.push(true));\n        localStorage.setItem(\"completedModes\", JSON.stringify(dummieArray));\n      } else {\n        localStorage.setItem(\"completedModes\", JSON.stringify(completeMode));\n      }\n    }\n  }\n\n  componentWillMount() {\n    var bigItem = JSON.parse(localStorage.getItem(\"bigItem\"));\n    var questionStorage = localStorage.getItem(\"question\");\n    var getData = JSON.parse(localStorage.getItem(\"\".concat(questionStorage)));\n    var selectedMode = JSON.parse(localStorage.getItem(\"selectedModes\"));\n    var selectedModeName = [];\n\n    for (var i in selectedMode) {\n      selectedModeName.push(selectedMode[i].name);\n    }\n\n    if (bigItem) {\n      bigItem.selectedMode = selectedModeName;\n    } else {\n      bigItem = [];\n    }\n\n    this.setState({\n      allData: bigItem,\n      dataGet: getData\n    });\n  }\n\n  render() {\n    // NEXT / SUBMIT BUTTON SWITCH\n    console.log(\"THE STATE \", this.state.allData);\n    const nextSubmit = this.state.selectedCat === 5 ? // || (parseInt((localStorage.getItem(\"group\")) === 1)\n    JSON.parse(localStorage.getItem(\"completedModes\")).filter(item => item === false).length === 0 ? React.createElement(Link, {\n      to: {\n        pathname: \"/confirmation\",\n        state: {\n          answers: this.state.answers\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.submit,\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Submit\")) : React.createElement(React.Fragment, null, React.createElement(Button, {\n      className: \"submit\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Submit\")) : React.createElement(Button, {\n      onClick: this.next,\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Next\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, this.state.selectedCat !== 1 && React.createElement(Button, {\n      style: {\n        marginRight: \"10px\"\n      },\n      onClick: this.prev,\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Previous\"), nextSubmit), React.createElement(Categories, {\n      idPage: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), this.state.question.map((question, index) => {\n      var questionParent = question;\n      this.state.incidentName = questionParent.incident.name;\n      localStorage.setItem(\"question\", question.question);\n      var questionStorage = localStorage.getItem(\"question\");\n      localStorage.setItem(\"\".concat(questionStorage), JSON.stringify(questionParent));\n      return React.createElement(\"ul\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        value: question.question,\n        key: index,\n        style: {\n          fontSize: \"20px\"\n        },\n        onClick: this.handleClick.bind(this, question),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, question.question, React.createElement(DropdownMotivation, {\n        key: index,\n        listNameFromParent: questionParent,\n        value: this.test(question.question),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(Frequency, {\n        callBackFromParent: this.frequencyCallback,\n        listNameFromParent: questionParent,\n        value: this.test(question.question),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        listNameFromParent: questionParent,\n        getComment: this.getBackComment,\n        value: this.test(question.question),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })));\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\aggad.samy\\Workspace\\UITP-React-Spring\\Front-end\\src\\components\\FormPage\\Mainform\\MainForm.js"],"names":["Frequency","Comments","Motivation","Categories","URLStorage","Link","uniqueid","axios","React","Container","Row","Col","Button","Form","FormGroup","DropdownExampleCompact","ButtonGroup","Dropdown","DropdownMotivation","MainForm","Component","constructor","props","handleSelection","idx","e","setState","selectedMode","next","id","state","fetchQuestions","prevState","selectedCat","prev","get","API_URL","then","res","data","question","isLoaded","test","allData","i","length","selectCat","target","value","localStorage","setItem","JSON","stringify","answers","frequencyCallback","regularityCall","regularityFromChild","dataGet","incidentName","handleClick","getQuestion","find","indexOf","key","undefined","splice","console","log","parse","componentDidMount","transportId","modeID","filter","answer","frequency","completeMode","getItem","index","group","dummieArray","map","item","push","componentWillMount","bigItem","questionStorage","getData","selectedModeName","name","render","nextSubmit","pathname","submit","display","justifyContent","marginRight","questionParent","incident","fontSize","bind","getBackComment"],"mappings":"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","sourcesContent":["import Frequency from './Frequency/Radio';\nimport Comments from './Comment/Comment';\n// import Legend from './Legend/Legend';\nimport Motivation from './Motivation/Motivation'\nimport Categories from './Categories/Categories'\nimport URLStorage from '../../../constants';\nimport { Link } from 'react-router-dom';\nimport uniqueid from 'uniqid';\n// import  ConfirmModal  from '../Modal';\n\nimport '../../../App.css';\n\nimport axios from 'axios';\nimport React from 'react';\nimport { Container, Row, Col, Button, Form, FormGroup } from 'reactstrap';\n\nimport './MainForm.css'\nimport DropdownExampleCompact from './Motivation/Motivation';\nimport { ButtonGroup, Dropdown } from 'semantic-ui-react';\nimport DropdownMotivation from './Motivation/Motivation';\n\nexport default class MainForm extends React.Component {\nconstructor(props){\n    super (props)\n    this.state = {\n        question: [],\n        id: 1,\n        test: null,\n        allData: [],\n        answers: [],\n        value: [],\n        selectedCat: 1,\n        selectedMode: 0,\n        dataGet : [],\n        incidentName: \"\",\n\n    }\n}\n\n    handleClick(question){\n        if (this.state.allData.length) {  \n            var getQuestion = this.state.allData.find(function (data, id) {\n                    if (data.id === question.id) {\n                        return data\n                    } else {\n                        return false\n                    }\n                })\n            if(getQuestion) {\n                var indexOf = this.state.allData.indexOf(getQuestion);\n                for (var key in getQuestion) {\n                    if (getQuestion[key] === question[key] || getQuestion[key] === undefined) {\n                        getQuestion[key] = question[key]\n                        this.state.allData.splice(indexOf, 1, question)\n                        console.log(this.state.allData)\n                        localStorage.setItem(\"bigItem \", JSON.parse(this.state.allData))\n                    }\n                }\n            } else {\n                this.setState({ allData: [...this.state.allData, question ]})\n                console.log(this.state.allData)\n                localStorage.setItem(\"bigItem \", JSON.parse(this.state.allData))\n\n            }\n        } else {\n            this.setState({allData: [question]})\n            localStorage.setItem(\"bigItem \", JSON.parse(this.state.allData))        }\n    \n    }\n\n    handleSelection = (idx) => (e) => {\n        this.setState({ selectedMode: idx });\n    };\n\n    next = () => {\n        let id = this.state.id + 1;\n        this.fetchQuestions(id);\n        this.setState(prevState => ({\n            selectedCat: prevState.selectedCat + 1,\n            id: prevState.id + 1,\n\n        }));\n\n\n    }\n    prev = () => {\n        let id = this.state.id - 1;\n        this.fetchQuestions(id);\n        this.setState(prevState => ({\n            selectedCat: prevState.selectedCat - 1,\n            id: prevState.id - 1,\n        }));\n\n    }\n\n\n    fetchQuestions = (id) => {\n        axios.get(`${URLStorage.API_URL}/getAllQuestions/${id}`)\n            .then(res => {\n                const data = res.data\n                this.setState({\n                    question: data,\n                    isLoaded: true,\n                })\n            })\n    }\n\n    test = (question) => {\n        var test = this.state.allData\n        if (test === null) {\n            return this.setState({\n                allData: []\n            })\n        } else {\n\n            for (let i = 0; i < test.length; i++) {\n                if (test[i].question === question) {\n                }\n\n            }\n        }\n\n\n    }\n\n\n\n    // anyChange = (id) => (e) => {\n    //     const inputName = e.target.name;\n    //     const inputValue = e.target.value;\n    //     let entries = Object.assign({}, this.state);\n    //     const { answers } = entries;\n    //     answers.map(answer => answer.questionID === id ? answer[inputName] = inputValue : undefined);\n    //     this.setState(entries);\n    //     localStorage.setItem(this.props.id, JSON.stringify(this.state.answers));\n\n    //     // ------------ SWITCH BOOLEAN TO COMPLETED FOR CURRENT MODE ---------------\n\n    //     console.log(this.state.allData)\n\n    //     if (this.state.allData.filter(answer => answer.frequency === null).length === 0) {\n\n    //         let completeMode = JSON.parse(localStorage.getItem(\"completedModes\"));\n    //         completeMode[this.props.index] = true;\n\n    //         if (this.props.group) {\n    //             var dummieArray = [];\n    //             completeMode.map(item => dummieArray.push(true));\n    //             localStorage.setItem(\"completedModes\", JSON.stringify(dummieArray));\n\n    //         } else {\n    //             localStorage.setItem(\"completedModes\", JSON.stringify(completeMode));\n    //         }\n    //     }\n    // }\n\n    selectCat = (e) => {\n        this.setState({ selectedCat: e.target.value })\n        localStorage.setItem(this.props.id, JSON.stringify(this.state.answers));\n    }\n    frequencyCallback = (regularityCall) => {\n        this.setState({\n            regularityFromChild: regularityCall\n        })\n    }\n    componentDidMount() {\n\n        this.fetchQuestions(1);\n\n        const transportId = this.props.id;\n        this.setState({ modeID: transportId})\n\n        if (this.state.allData.filter(answer => answer.frequency === null).length === 0) {\n\n            let completeMode = JSON.parse(localStorage.getItem(\"completedModes\"));\n            completeMode[this.props.index] = true;\n\n            if (this.props.group) {\n                var dummieArray = [];\n                completeMode.map(item => dummieArray.push(true));\n                localStorage.setItem(\"completedModes\", JSON.stringify(dummieArray));\n\n            } else {\n                localStorage.setItem(\"completedModes\", JSON.stringify(completeMode));\n            }\n        }\n    };\n\n    componentWillMount(){\n        var bigItem = JSON.parse(localStorage.getItem(\"bigItem\"))\n        var questionStorage = localStorage.getItem(\"question\");\n        var getData = JSON.parse(localStorage.getItem(`${questionStorage}`))\n\n        var selectedMode = JSON.parse(localStorage.getItem(\"selectedModes\"))\n            var selectedModeName = [];\n            for (var i in selectedMode) {\n                selectedModeName.push(selectedMode[i].name)\n            }\n            if(bigItem){\n                bigItem.selectedMode = selectedModeName\n            } else {\n                bigItem = []\n            }\n\n        this.setState({ allData : bigItem, dataGet: getData})\n    }\n\n\n    render() {\n        // NEXT / SUBMIT BUTTON SWITCH\n        console.log(\"THE STATE \", this.state.allData)\n        const nextSubmit = this.state.selectedCat === 5 ?\n            // || (parseInt((localStorage.getItem(\"group\")) === 1)\n            (JSON.parse(localStorage.getItem(\"completedModes\")).filter(item => item === false).length === 0) ?\n                <Link to={{ pathname: \"/confirmation\", state: { answers: this.state.answers } }}>\n                    <Button onClick={this.submit} className=\"submit\" >Submit</Button>\n                </Link>\n                : <>\n                    <Button className=\"submit\" disabled>Submit</Button>\n                </>\n            :\n            <Button onClick={this.next} className=\"submit\">Next</Button>;\n        return (\n            <React.Fragment>\n                <Container>\n                    <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                        {this.state.selectedCat !== 1 && <Button style={{ marginRight: \"10px\" }} onClick={this.prev} className=\"submit\" >Previous</Button>}\n                        {nextSubmit}\n                    </div>\n                    <Categories idPage={this.state.id} />\n                    <br />\n                    <br />\n                    {this.state.question.map((question, index) => {\n                        var questionParent = question\n                        this.state.incidentName = questionParent.incident.name\n                        localStorage.setItem(\"question\", question.question)\n                        var questionStorage = localStorage.getItem(\"question\");\n                        localStorage.setItem(`${questionStorage}`, JSON.stringify(questionParent))\n                        return (\n                            <ul\n                                key={index}\n                            >\n                                <li\n                                    value={question.question}\n                                    key={index}\n                                    style={{ fontSize: \"20px\" }}\n                                    onClick={this.handleClick.bind(this, question)}\n                                >\n                                    {\n                                        question.question\n                                    }\n                                    <DropdownMotivation\n                                        key={index}\n                                        listNameFromParent={questionParent}\n                                        value={this.test(question.question)}\n                                    />\n                                    <Frequency\n                                        callBackFromParent={this.frequencyCallback}\n                                        listNameFromParent={questionParent}\n                                        value={this.test(question.question)}\n                                    />\n                                    <Comments\n                                        listNameFromParent={questionParent}\n                                        getComment={this.getBackComment}\n                                        value={this.test(question.question)}\n                                    />\n                                </li>\n                            </ul>\n                        );\n                    })}\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}