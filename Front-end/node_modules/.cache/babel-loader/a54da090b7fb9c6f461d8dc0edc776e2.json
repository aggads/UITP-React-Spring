{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aggad.samy\\\\Workspace\\\\uitp-service\\\\Front-end\\\\src\\\\components\\\\FormPage\\\\Mainform\\\\Comment\\\\Comment.js\";\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport React, { PureComponent } from 'react';\n\nclass Comments extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: []\n    };\n  }\n\n  handleChange(event) {\n    const questionId = this.props.listNameFromParent;\n    this.setState({\n      comment: event.target.value\n    });\n    localStorage.setItem(\"comments\", a.target.value);\n    var commentStorage = localStorage.getItem(\"comments\");\n    questionId.comment = commentStorage;\n  }\n\n  render() {\n    return React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(Input, {\n      style: {\n        margin: '0',\n        width: \"100%\"\n      },\n      type: \"textarea\",\n      id: \"exampleText\",\n      value: this.state.comment,\n      name: \"comment\",\n      placeholder: \"Place comment if needed\",\n      onChange: this.handleChange.bind(this) // onClick={(a) => {\n      //   // console.log(a.target.value)\n      //   localStorage.setItem(\"comments\", a.target.value)\n      //   var commentsStorage = localStorage.getItem(\"comments\")\n      //   questionId.comment = commentsStorage\n      //   //console.log(questionId)\n      // }\n      // }\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:\\Users\\aggad.samy\\Workspace\\uitp-service\\Front-end\\src\\components\\FormPage\\Mainform\\Comment\\Comment.js"],"names":["FormGroup","Label","Input","React","PureComponent","Comments","state","comment","handleChange","event","questionId","props","listNameFromParent","setState","target","value","localStorage","setItem","a","commentStorage","getItem","render","margin","width","bind"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,MAAMC,QAAN,SAAuBD,aAAvB,CAAqC;AAAA;AAAA;AAAA,SAEnCE,KAFmC,GAE3B;AACNC,MAAAA,OAAO,EAAE;AADH,KAF2B;AAAA;;AAMnCC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB,UAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,kBAA9B;AACA,SAAKC,QAAL,CAAc;AAACN,MAAAA,OAAO,EAAEE,KAAK,CAACK,MAAN,CAAaC;AAAvB,KAAd;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,CAAC,CAACJ,MAAF,CAASC,KAA1C;AACM,QAAII,cAAc,GAAGH,YAAY,CAACI,OAAb,CAAqB,UAArB,CAArB;AACAV,IAAAA,UAAU,CAACH,OAAX,GAAqBY,cAArB;AACP;;AAEDE,EAAAA,MAAM,GAAG;AAEP,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADK,EAEL,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OADT;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,aAHL;AAKE,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,OALpB;AAME,MAAA,IAAI,EAAC,SANP;AAOE,MAAA,WAAW,EAAC,yBAPd;AAQE,MAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkBgB,IAAlB,CAAuB,IAAvB,CARZ,CASE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,CAAP;AAsBD;;AAtCkC;;AAyCrC,eAAenB,QAAf","sourcesContent":["import { FormGroup, Label, Input } from 'reactstrap';\nimport React, { PureComponent } from 'react'\n\nclass Comments extends PureComponent {\n\n  state = {\n    comment: [],\n  }\n\n  handleChange(event) {\n    const questionId = this.props.listNameFromParent\n    this.setState({comment: event.target.value})\n    localStorage.setItem(\"comments\", a.target.value)\n          var commentStorage = localStorage.getItem(\"comments\")\n          questionId.comment = commentStorage\n  }\n\n  render() {\n    \n    return <FormGroup>\n      <Label for=\"exampleText\">Comment</Label>\n      <Input\n        style={{ margin: '0', width: \"100%\", }}\n        type=\"textarea\"\n        id=\"exampleText\"\n        \n        value={this.state.comment}\n        name=\"comment\"\n        placeholder=\"Place comment if needed\"\n        onChange={this.handleChange.bind(this)}\n        // onClick={(a) => {\n        //   // console.log(a.target.value)\n        //   localStorage.setItem(\"comments\", a.target.value)\n        //   var commentsStorage = localStorage.getItem(\"comments\")\n        //   questionId.comment = commentsStorage\n        //   //console.log(questionId)\n        // }\n        // }\n      />\n    </FormGroup>\n\n  };\n}\n\nexport default Comments;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}